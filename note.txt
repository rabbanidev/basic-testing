vi.fn()
উদ্দেশ্য: সম্পূর্ণ নতুন mock function তৈরি করা
কবে ব্যবহার করা হয়: যখন তুমি নিজের তৈরি ফাংশন mock করতে চাও
আসল ফাংশন: আসল ফাংশনের সঙ্গে কোনো সম্পর্ক নেই
কল ট্র্যাকিং: কয়বার কল হয়েছে, কোন আর্গুমেন্ট দিয়ে কল হয়েছে — সব ট্র্যাক করা যায়
Mock করা যায়: হ্যাঁ সরাসরি vi.fn(() => value) দিয়ে mock করা যায়
Restore করা যায়: না (কারণ এটা নতুন ফাংশন)
সাধারণ ব্যবহার: Helper বা Utility ফাংশন টেস্ট করা
Example: const mockFn = vi.fn(() => "ok")

vi.spyOn()
উদ্দেশ্য: আগেই থাকা কোনো ফাংশনের উপর নজর রাখা (spy করা)
কবে ব্যবহার করা হয়: যখন তুমি কোনো বিদ্যমান অবজেক্টের মেথড (যেমন obj.method()) ট্র্যাক করতে চাও
আসল ফাংশন: আসল ফাংশনের রেফারেন্স ধরে রাখে (চাইলে ওভাররাইড করা যায়)
কল ট্র্যাকিং: একইভাবে কল, আর্গুমেন্ট, রিটার্ন ভ্যালু — সব ট্র্যাক করা যায়
Mock করা যায়: হ্যাঁ, spy.mockImplementation(() => value) দিয়ে mock করা যায়
Restore করা যায়: হ্যাঁ, spy.mockRestore() দিয়ে আসল ফাংশন ফিরিয়ে আনা যায়
সাধারণ ব্যবহার: ক্লাস বা অবজেক্টের মেথড টেস্ট করা
Example: const spy = vi.spyOn(obj, "method")